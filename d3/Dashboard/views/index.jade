h1= title
p Welcome to #{title}


script(type='text/javascript').

  // scatter plot
  var h = 350;
  var w = 400;  

  monthlySales = [
     {"month":10, "sales":100},
     {"month":20, "sales":130},
     {"month":30, "sales":250},
     {"month":40, "sales":300},
     {"month":50, "sales":265},
     {"month":60, "sales":225},
     {"month":70, "sales":180},
     {"month":80, "sales":120},
     {"month":90, "sales":145},
     {"month":100, "sales":130}
  ];

  // KPI color
  function salesKPI(d) {
    if (d >= 250) return "#33CC66"; 
    else if (d < 250) return "#666666";
  }

  function showMinMax(dataset, col, val, type){
    var max = d3.max(dataset, function(d){ return d[col]; });
    var min = d3.min(dataset, function(d){ return d[col]; });
  
    if (type == 'minmax' && (val == max || val == min)){
      return val;
    }
    else {
      if (type == 'all') return val;
    } 
  }

  var svg = d3.select("body").append("svg")
    .attr({ width: w, height: h});

  var dots = svg.selectAll("circle")
    .data(monthlySales)
    .enter()
    .append("circle")
  .attr({
    cx: function(d){ return d.month * 3;},
    cy: function(d){ return h - d.sales; },
    r: 5, 
    "fill": function(d){ return salesKPI(d.sales); }
  });

  var labels = svg.selectAll('text')
    .data(monthlySales)
    .enter()
    .append('text')
  .text(function(d){ return showMinMax(monthlySales, 'sales', d.sales, 'minmax'); })
  .attr({
    x: function(d){ return (d.month * 3) - 28; },
    y: function(d){ return h - d.sales; },
    "font-size": "12px",
    "font-family": "sans-serif",
    "fill": "#666666",
    "text-anchor": "start"
  });
  
  // line graph
  var h = 300;
  var w = 500;

  //- monthlySales = [
  //-      {"month":10, "sales":20},
  //-      {"month":20, "sales":14},
  //-      {"month":30, "sales":20},
  //-      {"month":40, "sales":21},
  //-      {"month":50, "sales":15},
  //-      {"month":60, "sales":22},
  //-      {"month":70, "sales":9},
  //-      {"month":80, "sales":6},
  //-      {"month":90, "sales":23},
  //-      {"month":100, "sales":7}
  //- ];

  monthlySales = [
     {"month":10, "sales":100},
     {"month":20, "sales":130},
     {"month":30, "sales":250},
     {"month":40, "sales":300},
     {"month":50, "sales":265},
     {"month":60, "sales":225},
     {"month":70, "sales":180},
     {"month":80, "sales":120},
     {"month":90, "sales":145},
     {"month":100, "sales":130}
  ];


  // draw the lines
  var lineFun = d3.svg.line()
    .x(function(d){ return d.month * 3; })
    .y(function(d){ return h - d.sales; })
    .interpolate("linear");

  var svg = d3.select("body").append("svg")
    .attr({width: w, height: h});

  // connects the lines
  var viz = svg.append("path")
    .attr({
      d: lineFun(monthlySales),
      "stroke": "purple",
      "stroke-width": 2,
      "fill": "none"
    });

  var labels = svg.selectAll("text")
    .data(monthlySales)
    .enter()
    .append("text")
  .text(function(d){ return d.sales; })
  .attr({
    x: function(d){ return d.month * 3 - 25; },
    y: function(d){ return h - d.sales; },
    "font-size": "12px",
    "font-family": "sans-serif",
    "fill": "#666666",
    "text-anchor": "start",
    "dy": ".35em",
    "font-weight": function(d, i){
      if (i === 0 || i ==(monthlySales.length - 1))
        return "bold";
      else 
        return "normal";
    }
  })


  // Bar graph

  var w = 500;
  var h = 300; 

  var padding = 2;
  var dataset = [50, 10, 14, 20, 25, 13, 22, 38, 53, 43];

  //- var svg = d3.select('body').append('svg')
  //-             .attr('width', w)
  //-             .attr('height', h);

  //- svg.selectAll('rect')
  //-   .data(dataset)
  //-   .enter()
  //-   .append('rect')
  //- .attr('x', function(d, i){ return i * (w / dataset.length); })
  //- .attr("y", function(d){ return h - (d * 4); })
  //- .attr("width", w / dataset.length - padding)
  //- .attr("height", function(d){ return d * 4; })
  //- .attr("fill", function(d){ return "rgb(" + d * 10 + ")"; }); 

  // determine color
  function colorPicker(v){
    if (v <= 20) return "#666666";
    else if (v >= 20) return "#FF0033";
  }
  
  // append main svg
  var svg = d3.select('body').append('svg')
              .attr('width', w)
              .attr('height', h);

  // append rect with bars 
  svg.selectAll('rect')
    .data(dataset)
    .enter()
    .append('rect')
  .attr({
    x: function(d, i){ return i * (w / dataset.length); },
    y: function(d){ return h - (d * 4); },
    width: w / dataset.length - padding,
    height: function(d){ return d * 4; },
    fill: function(d){ return colorPicker(d); }
  })

  // add tooltips
  //- .append('title')
  //-   .text(function(d){ return d; });

  // append labels
  //- svg.selectAll("text")
  //-   .data(dataset)
  //-   .enter()
  //-   .append("text")
  //-   .text(function(d){ return d; })
  //- .attr({
  //-   "text-anchor": "middle",
  //-   x: function(d, i){ return i * (w / dataset.length) + (w / dataset.length - padding) / 2;},
  //-   y: function(d) { return h - (d * 4) + 14; },
  //-   "font-family": "sans-serif",
  //-   "font-size": 12,
  //-   "fill": "#ffffff" 
  //- })
  // hover label
  .on('mouseover', function(d){
    svg.append("text")
      .text(d)
      .attr({
        "text-anchor": "middle",
        x: parseFloat(d3.select(this).attr('x')) + 
            parseFloat(d3.select(this).attr('width') / 2),
        y: parseFloat(d3.select(this).attr('y')) + 12,
        "font-family": "sans-serif",
        "font-size": 12,
        "fill": "#ffffff",
        "id": "tooltip" 
      });
  })

  .on('mouseout', function(){
    d3.select('#tooltip').remove();
  });  