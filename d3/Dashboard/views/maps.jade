<!-- get data at census.gov -->
<!-- convert data to geoJSON at http://converter.mygeodata.eu/ -->

script().

  // normal colorless map
  var w = 500;
  var h = 300;

  // scale map to fit
  var projection = d3.geo.albersUsa()
                    .translate([w/2, h/2])
                    .scale([500]);

  var path = d3.geo.path().projection(projection);

  var svg = d3.select('body').append('svg').attr({width: w, height: h});

  d3.json('javascript/us.json', function(json){
    svg.selectAll('path')
      .data(json.features)
      .enter()
      .append('path')
      .attr('d', path)
      .attr('fill', '#666666');

  d3.csv("javascript/sales-by-city.csv", function(data) {
    
    svg.selectAll("circle")
       .data(data)
       .enter()
       .append("circle")
       .attr("cx", function(d) {
         return projection([d.lon, d.lat])[0];
       })
       .attr("cy", function(d) {
         return projection([d.lon, d.lat])[1];
       })
       .attr("r", function(d) {
        return Math.sqrt(parseInt(d.sales)* 0.00005);
       })
       .style("fill", "red");
    
  });
  });


  // choropleth map
  // find colors here colorbrewer2.org

  //- var w = 500;
  //- var h = 300;

  //- // scale map to fit
  //- var projection = d3.geo.albersUsa()
  //-                   .translate([w/2, h/2])
  //-                   .scale([500]);

  //- var path = d3.geo.path().projection(projection);

  //- var svg = d3.select('body').append('svg').attr({width: w, height: h});

  //- var color = d3.scale.linear()
  //-               .range(['rgb(254,240,217)','rgb(253,212,158)','rgb(253,187,132)','rgb(252,141,89)','rgb(227,74,51)','rgb(179,0,0)']);

  

  //- d3.csv('javascript/state-sales.csv', function(data){

  //-   color.domain([
  //-     0, d3.max(data, function(d){ return d.sales; })
  //-   ]);

  //-   d3.json('javascript/us.json', function(json){

  //-     // join data together
  //-     for (var i = 0; i < data.length; i++) {
  //-       var salesState = data[i].state;
  //-       var salesVal = parseFloat(data[i].sales);

  //-       for(var j = 0; j < json.features.length; j++) {
  //-         var usState = json.features[j].properties.NAME;

  //-         // determine match between its sales and state by name
  //-         if (salesState == usState) {
  //-           json.features[j].properties.value = salesVal;
  //-           break;
  //-         }
  //-       }
  //-     }

  //-     svg.selectAll('path')
  //-       .data(json.features)
  //-       .enter()
  //-       .append('path')
  //-       .attr('d', path)
  //-       .style('fill', function(d){
  //-         var value = d.properties.value;
  //-         if (value) {
  //-           return color(value);
  //-         } else {
  //-           return "#ffffff";
  //-         }
  //-       });
  //-   });

  //- });

